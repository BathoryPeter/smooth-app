name: Generate screenshots for Android

on:
  push:
    branches:
      - 'screenshots/*'
    
jobs:
  screenshots:
    name: Generate screenshots for Android
    runs-on: macos-latest
    strategy:
      matrix:
        language: [fr, en]
        country: [FR, UK]
        platform: [ios, android]
        device: [iPhone8Plus]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Version
        run: echo ${{ env.RELEASE_VERSION }}

      - name: Setup Java jdk
        uses: actions/setup-java@v3.0.0
        with:
          distribution: 'zulu'
          java-version: 12.x

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.0.2

      - name: Decrypt API JSON file
        run: cd ./packages/smooth_app/android/fastlane/envfiles && chmod +x ./decrypt_secrets.sh && ./decrypt_secrets.sh && ls
        env:
          API_JSON_FILE_DECRYPTKEY: ${{ secrets.API_JSON_FILE_DECRYPTKEY }}
          DECRYPT_GPG_KEYSTORE: ${{ secrets.DECRYPT_GPG_KEYSTORE }}
          STORE_JKS_DECRYPTKEY: ${{ secrets.NEW_CYPHER }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: flutter2.10 #change this to force refresh cache
      - run: flutter --version

      - name: Get dependencies
        run: ci/pub_upgrade.sh

      #- name: Install ChromeDriver
      #  uses: nanasess/setup-chromedriver@v1
        #with:
          # Optional: do not specify to match Chrome's version
          # chromedriver-version: '88.0.4324.96'
     # - name: Run ChromeDriver
       # run: |
          #export DISPLAY=:99
         # chromedriver --url-base=/wd/hub --port=4444 &
         # sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1  
          # &optional
        #--disable-gpu
      - name: Generate screenshots
        timeout-minutes: 30
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          #target: default
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          arch: x86_64
          script: yes | flutter doctor --android-licenses \
            && cd ./packages/smooth_app/ \
            && pwd \
            && flutter drive -d emulator-5554 --driver=test_driver/screenshot_driver.dart --target=integration_test/app_test.dart --dart-define=LANGUAGE=${{ matrix.language }} --dart-define=COUNTRY=${{ matrix.country }} --dart-define=PLATFORM=${{ matrix.platform }} --dart-define=DEVICE=${{ matrix.device }}
            
     # - name: Run screenshot generation
     #   run: cd ./packages/smooth_app/ && flutter drive --driver=test_driver/screenshot_driver.dart --target=integration_test/app_test.dart --dart-define=LANGUAGE=${{ matrix.language }} --dart-define=COUNTRY=${{ matrix.country }} --dart-define=PLATFORM=${{ matrix.platform }} --dart-define=DEVICE=${{ matrix.device }} --d chrome
      - name: Bump version
        uses: maierj/fastlane-action@v2.2.0
        with:
          lane: setVersion
          subdirectory: packages/smooth_app/android
        env:
          VERSION_NAME: ${{ env.RELEASE_VERSION }}

      - name: Build AAB
        run: echo $SIGN_STORE_PATH && pwd && cd ./packages/smooth_app/ && pwd && flutter build appbundle --release
        env:
         SIGN_STORE_PATH: ./../fastlane/envfiles/keystore.jks
         SIGN_STORE_PASSWORD: ${{ secrets.SIGN_STORE_PASSWORD }}
         SIGN_KEY_ALIAS: ${{ secrets.SIGN_KEY_ALIAS }}
         SIGN_KEY_PASSWORD: ${{ secrets.SIGN_KEY_PASSWORD }}

      - name: Release AAB
        uses: maierj/fastlane-action@v2.2.0
        with:
          lane: screengrab
          subdirectory: packages/smooth_app/android

      - name: Install Dependencies
        run: gem install bundler && bundle install

      - name: Build Screenshots APK
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: pwd && bundle exec fastlane build_for_screengrab && find . -type f -name '*.apk' && bundle exec fastlane screengrab

      - name: Upload screenshots
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: fastlane/screenshots/ # or path/to/artifact
#if-no-files-found: error # For testing




